# yamllint disable rule:line-length
{{- $rootPersistence := .Values.persistence }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "local-ai.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "local-ai.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "local-ai.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  {{- with .Values.deployment.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      name: {{ template "local-ai.fullname" . }}
      labels:
        app.kubernetes.io/name: {{ include "local-ai.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        {{- if .Values.promptTemplates }}
        checksum/config-prompt-templates: {{ include (print $.Template.BasePath "/configmap-prompt-templates.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- with .Values.deployment.runtimeClassName }}
      runtimeClassName: {{ . }}
      {{- end }}
      {{- with .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        # Additional initContainers from values.yaml
        {{- if .Values.initContainers }}
        {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy }}
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 12 }}
          {{- end }}
          {{- if .args }}
          args:
            {{- toYaml .args | nindent 6 }}
          {{- end }}
          {{- if .env }}
          env:
            {{- toYaml .env | nindent 6 }}
          {{- end }}
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 6 }}
          {{- end }}
          {{- if or .volumeMounts $rootPersistence }}
          volumeMounts:
          {{- if .volumeMounts }}
            {{- toYaml .volumeMounts | nindent 6 }}
          {{- end }}
          {{- range $key, $pvc := $rootPersistence }}
          {{- if $pvc.enabled }}
            - name: {{ $key }}
              mountPath: {{ $pvc.globalMount | default (print "/" $key) }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .securityContext }}
          securityContext:
            {{- toYaml .securityContext | nindent 6 }}
          {{- end }}
        {{- end }}
        {{- end }}

        {{- if .Values.promptTemplates }}
        - name: prompt-templates
          image: {{ .Values.deployment.prompt_templates.image }}
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              cp -fL /prompt-templates/* /models
          volumeMounts:
            - mountPath: /prompt-templates
              name: prompt-templates
            {{- range $key, $pvc := $rootPersistence }}
              {{- if $pvc.enabled }}
            - name: {{ $key }}
              mountPath: {{ $pvc.globalMount | default (print "/" $key) }}
              {{- end }}
            {{- end }}
        {{- end }}
        {{- if .Values.modelsConfigs }}
        - name: models-configs
          image: {{ .Values.deployment.prompt_templates.image }}
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              for file in /models-configs/*; do
                filename=$(basename "$file")
                if [[ $filename != *.yaml ]]; then
                  cp -fL "$file" "/models/$filename.yaml"
                else
                  cp -fL "$file" "/models/$filename"
                fi
              done
          volumeMounts:
            - mountPath: /models-configs
              name: models-configs
            {{- range $key, $pvc := $rootPersistence }}
              {{- if $pvc.enabled }}
            - name: {{ $key }}
              mountPath: {{ $pvc.globalMount | default (print "/" $key) }}
              {{- end }}
            {{- end }}
        {{- end }}
      containers:
        # Sidecar containers from values.yaml
        {{- range .Values.sidecarContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          imagePullPolicy: {{ .imagePullPolicy }}
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 12 }}
          {{- end }}
          {{- if .args }}
          args:
            {{- toYaml .args | nindent 6 }}
          {{- end }}
          {{- if .env }}
          env:
            {{- toYaml .env | nindent 6 }}
          {{- end }}
          {{- if .ports }}
          ports:
            {{- toYaml .ports | nindent 6 }}
          {{- end }}
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 6 }}
          {{- end }}
          {{- if or .volumeMounts $rootPersistence }}
          volumeMounts:
          {{- if .volumeMounts }}
            {{- toYaml .volumeMounts | nindent 6 }}
          {{- end }}
          {{- range $key, $pvc := $rootPersistence }}
          {{- if $pvc.enabled }}
            - name: {{ $key }}
              mountPath: {{ $pvc.globalMount | default (print "/" $key) }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .livenessProbe }}
          livenessProbe:
            {{- toYaml .livenessProbe | nindent 6 }}
          {{- end }}
          {{- if .readinessProbe }}
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 6 }}
          {{- end }}
          {{- if .securityContext }}
          securityContext:
            {{- toYaml .securityContext | nindent 6 }}
          {{- end }}
        {{- end }}
        - name: {{ template "local-ai.fullname" . }}
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- range $key, $value := .Values.deployment.env }}
            - name: {{ $key | upper }}
              value: {{ quote $value }}
            {{- end }}
            - name: MODELS_PATH
              value: {{ .Values.deployment.modelsPath }}
          {{- if .Values.deployment.secretEnv }}
            {{- toYaml .Values.deployment.secretEnv | nindent 12 }}
          {{- end}}
          volumeMounts:
            {{- range $key, $pvc := $rootPersistence}}
              {{- if $pvc.enabled }}
            - name: {{ $key }}
              mountPath: {{ $pvc.globalMount | default (print "/" $key) }}
              {{- end }}
            {{- end }}
      {{- if $rootPersistence}}
      volumes:
        {{- range $key, $pvc := $rootPersistence}}
          {{- if $pvc.enabled }}
        - name: {{ $key }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" (include "local-ai.fullname" $) $key }}
          {{- end }}
        {{- end }}
        - name: prompt-templates
          configMap:
            name: {{ template "local-ai.fullname" . }}-prompt-templates
        - name: models-configs
          configMap:
            name: {{ template "local-ai.fullname" . }}-models-configs
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
